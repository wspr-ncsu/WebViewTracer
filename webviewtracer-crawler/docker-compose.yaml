services:
  backend:
    restart: unless-stopped
    image: vv8_backend_api
    depends_on:
      - task_queue_broker
      - database
    build:
      context: ./backend
      dockerfile: Dockerfile
      network: host
    ports:
      - "4000:4000/tcp"
    environment:
      VV8_CELERY_BROKER: task_queue_broker
      VV8_CELERY_BROKER_PORT: 6379
      VV8_CELERY_ID: vv8_web_server
      SQL_USERNAME: ${SQL_USER:-vv8}
      SQL_PASSWORD: ${SQL_PASSWORD:-vv8}
      SQL_HOST: ${SQL_HOST:-database}
      SQL_PORT: ${SQL_PORT:-5439}
      SQL_DATABASE: ${SQL_DB:-vv8_backend}
  database:
    restart: unless-stopped
    image: vv8_postgres
    
    build:
      context: ./vv8_backend_database
      dockerfile: Dockerfile
      network: host
    command: postgres -c config_file=/etc/postgresql.conf
    ports:
      - "5439:5439/tcp"
    environment:
      PGPORT: 5439
      POSTGRES_PORT: 5439
      POSTGRES_PASSWORD: vv8
      POSTGRES_USER: vv8
      POSTGRES_DB: vv8_backend
      PGDATA: /var/lib/postgresql/data/pg_data
    volumes:
      - ./wvtdb:/var/lib/postgresql/data
  task_queue_broker:
    restart: unless-stopped
    image: redis:6.2
    volumes:
      - redis-data:/data
    ports:
      - "6380:6379/tcp"
  # Celery Workers
  log_parser_worker:
    restart: unless-stopped
    depends_on:
      - task_queue_broker
      - database    
    build:
      context: ./celery_workers
      dockerfile: log_parser.dockerfile
      network: host
      args:
        DOCKER_IMAGE: visiblev8/vv8-postprocessors:latest
    image: vv8_log_parser_worker
    volumes:
      - ./raw_logs:/app/raw_logs:rwx
      - ./parsed_logs:/app/parsed_logs:rwx
    env_file:
      - .env
    environment:
      VV8_CELERY_BROKER: task_queue_broker
      VV8_CELERY_BROKER_PORT: 6379
      VV8_CELERY_ID: vv8_log_parser
      CELERY_CONCURRENCY: ${CELERY_CONCURRENCY:-9}
      PGHOST: ${SQL_HOST:-database}
      PGPORT: ${SQL_PORT:-5439}
      PGUSER: ${SQL_USER:-vv8}
      PGPASSWORD: ${SQL_PASSWORD:-vv8}
      PGDATABASE: ${SQL_DATABASE:-vv8_backend}
      ADBLOCK_BINARY: /app/post-processors/adblock
      EASYPRIVACY_FILE: /app/post-processors/easyprivacy.txt
      EASYLIST_FILE: /app/post-processors/easylist.txt
      EMAP_FILE: /app/post-processors/entities.json
      EXFIL_API_FILE: /app/post-processors/exfil_apis
      ANDROID_API_BUCKETS_FILE: /app/post-processors/android_api_buckets.json
      IDLDATA_FILE: /artifacts/idldata.json
  flower:
    restart: unless-stopped
    depends_on:
      - task_queue_broker
      - database
    image: vv8-vv8_crawler_flower_monitor
    environment:
      - FLOWER_UNAUTHENTICATED_API=True
    build:
      context: ./flower
      dockerfile: Dockerfile
      network: host
    
    volumes:
      - ./flower/data:/etc/db:rwx
    ports:
      - "5559:5555/tcp"
volumes:
  vv8postgresdb: {}
  redis-data: {}

